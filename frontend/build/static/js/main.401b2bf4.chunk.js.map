{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","username","setUsername","password","setPassword","handleSubmit","e","a","preventDefault","inputData","requestCall","method","headers","body","JSON","stringify","fetch","alert","onSubmit","htmlFor","name","onChange","target","value","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,I,YCmDAA,MA/Cf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,mBAAS,kBAAjC,mBACA,GADA,UACsBA,mBAAS,4BAA/B,mBAUMK,GAVN,UAUkB,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACnBD,EAAEE,iBACIC,EAAY,CAChBR,SAAUA,EACVE,SAAUA,GAENO,EAAc,CAClBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,IAXJ,SAabO,MAAM,YAAaN,GAbN,OAcnBO,MAAM,kCAda,2CAAH,uDAiBlB,OACE,gCACE,8CACA,uBAAMC,SAAUb,EAAcM,OAAO,OAArC,UACE,uBAAOQ,QAAQ,WAAWC,KAAK,WAA/B,wBACA,uBAAOD,QAAQ,WAAWC,KAAK,WAAWC,SA9B3B,SAACf,GACpBJ,EAAYI,EAAEgB,OAAOC,UA8BjB,uBACA,uBAAOJ,QAAQ,WAAWC,KAAK,WAA/B,wBACA,uBAAOD,QAAQ,WAAWC,KAAK,WAAWI,KAAK,WAAWH,SA7B3C,SAACf,GACpBF,EAAYE,EAAEgB,OAAOC,UA6BjB,uBACA,wBAAQC,KAAK,SAAb,2BCjCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.401b2bf4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [data, setData] = useState('Data goes here');\n  const [API, setAPI] = useState('Data from API goes here');\n\n  const readUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const readPassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const inputData = {\n      username: username,\n      password: password,\n    };\n    const requestCall = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(inputData),\n    };\n    await fetch('/register', requestCall);\n    alert('Thank you for your submission!');\n  };\n\n  return (\n    <div>\n      <h1>Hello World!</h1>\n      <form onSubmit={handleSubmit} method=\"POST\">\n        <label htmlFor=\"username\" name=\"username\" >Username: </label>\n        <input htmlFor=\"username\" name=\"username\" onChange={readUsername} />\n        <br/>\n        <label htmlFor=\"password\" name=\"password\" >Password: </label>\n        <input htmlFor=\"password\" name=\"password\" type=\"password\" onChange={readPassword} />\n        <br/>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}